================================================================================
                                                               *injectme.nvim*

This plugin helps you to setup language injections with treesitter. Use it to
configure and try different injections. You can delete the plugin, once you
are happy with the injections, because it provides a command that saves the
selected injections to your runtime.
See |:treesitter-language-injections| and the treesitter query language for
details.

Each injection is defined by a language and a descriptive ID.
See  https://github.com/Dronakurl/injectme.nvim for a list of injections

Setup and configuration: 
  >
    require("injectme").setup({
      mode = "standard", 
      -- "all"/ "none" if all/no injections should be activated
      -- "standard", if no injections should be changed from standard settings 
      -- in the runtime directory, i.e. 
      --     ~/.config/nvim/after/queries/<language>/injections.scm
      reload_all_buffers = true, 
      -- after toggling an injection, all buffers are reloaded to reset 
      -- treesitter
    })
  <

                                                             *:InspectMeToggle*
Toggles one of the pre-configured language injections, use tab completion
to select the injections

                                                                *:InjectMeSave*
Saves the selected injections to your runtime, set mode to "standard". 
When you are happy with this setting and do not want to change it dynamically, 
you can safely delete the plugin, the injections will continue to work.
Use tab completion to (optionally) select the languages for which the 
injections should be saved.

                                                  *injectme.toggle_injection()*

injectme.toggle_injection({language}, {injection_id})

    For language {language}, this function switches the preconfigured language 
    injection with {injection_id} on and off. When the setting 
    reload_all_buffers is set:

      >
      require("injectme").config.reload_all_buffers = true
      <


                                                  *injectme.save_injections()*

injectme.save_injections({language})

    For language {language}, this function saves the injections. 
    See |:InjectMeSave|

vim:tw=78:ts=8:ft=help:norl:
